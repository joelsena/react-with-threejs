/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: sharingan (https://sketchfab.com/luci-fan)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/lucifers-corvette-1960-chevrolet-corvette-c1-507ee2e6d6a34a3db7bf8373c70fecff
title: Lucifer's Corvette - 1960 Chevrolet Corvette C1
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
    nodes: {
        Object_2: THREE.Mesh
        Object_3: THREE.Mesh
        Object_4: THREE.Mesh
        Object_5: THREE.Mesh
        Object_6: THREE.Mesh
        Object_7: THREE.Mesh
        Object_8: THREE.Mesh
        Object_9: THREE.Mesh
        Object_10: THREE.Mesh
    }
    materials: {
        chrome: THREE.MeshStandardMaterial
        glass: THREE.MeshStandardMaterial
        interior: THREE.MeshStandardMaterial
        lights: THREE.MeshStandardMaterial
        mirror: THREE.MeshStandardMaterial
        nodamage: THREE.MeshStandardMaterial
        tire: THREE.MeshStandardMaterial
        undercarriage: THREE.MeshStandardMaterial
        wheel: THREE.MeshStandardMaterial
    }
}

export default function CorvetteModel({
    ...props
}: JSX.IntrinsicElements['group']) {
    const group = useRef<THREE.Group>()
    const { nodes, materials } = useGLTF(
        '/models/corvetteModel.gltf'
    ) as GLTFResult

    useEffect(() => {
        Object.keys(materials).forEach(mat => {
            materials[mat].envMapIntesity = 20
        })
    }, [materials])

    return (
        <group ref={group} {...props} dispose={null} receiveShadow castShadow>
            <group rotation={[-Math.PI / 2, 0, 0]}>
                <mesh
                    geometry={nodes.Object_2.geometry}
                    material={materials.chrome}
                />
                <mesh
                    geometry={nodes.Object_3.geometry}
                    material={materials.glass}
                />
                <mesh
                    geometry={nodes.Object_4.geometry}
                    material={materials.interior}
                />
                <mesh
                    geometry={nodes.Object_5.geometry}
                    material={materials.lights}
                />
                <mesh
                    geometry={nodes.Object_6.geometry}
                    material={materials.mirror}
                />
                <mesh
                    geometry={nodes.Object_7.geometry}
                    material={materials.nodamage}
                />
                <mesh
                    geometry={nodes.Object_8.geometry}
                    material={materials.tire}
                />
                <mesh
                    geometry={nodes.Object_9.geometry}
                    material={materials.undercarriage}
                />
                <mesh
                    geometry={nodes.Object_10.geometry}
                    material={materials.wheel}
                />
            </group>
        </group>
    )
}

useGLTF.preload('/models/corvetteModel.gltf')
