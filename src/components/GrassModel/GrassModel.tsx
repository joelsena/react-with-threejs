/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: VRA (https://sketchfab.com/architect47)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/grass-please-like-model-if-you-download-it-f1defa8658d74dd685ac158a4c98f668
title: Grass - please like model if you download it
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
    nodes: {
        ['������������_-_������������_������������_������������_-_������������_������������_0']: THREE.Mesh
        ['������������_-_������������_������������_������������_������������_-_������������_������������_������������_0']: THREE.Mesh
        ['����������_-_��������������_����������_-_��������������_0']: THREE.Mesh
    }
    materials: {
        material: THREE.MeshStandardMaterial
        material_1: THREE.MeshStandardMaterial
        material_2: THREE.MeshStandardMaterial
    }
}

export default function GrassModel({
    ...props
}: JSX.IntrinsicElements['group']) {
    const group = useRef<THREE.Group>()
    const { nodes, materials } = useGLTF(
        '/models/grassModel.gltf'
    ) as GLTFResult
    return (
        <group ref={group} {...props} dispose={null}>
            <group
                position={[0, -14.51, 2196.6]}
                rotation={[Math.PI / 2, 0, 0]}
                scale={0.01}
            >
                <group rotation={[-Math.PI, 0, 0]}>
                    <mesh
                        geometry={
                            nodes[
                                '������������_-_������������_������������_������������_-_������������_������������_0'
                            ].geometry
                        }
                        material={materials.material}
                    />
                    <mesh
                        geometry={
                            nodes[
                                '������������_-_������������_������������_������������_������������_-_������������_������������_������������_0'
                            ].geometry
                        }
                        material={materials.material_1}
                    />
                    <mesh
                        geometry={
                            nodes[
                                '����������_-_��������������_����������_-_��������������_0'
                            ].geometry
                        }
                        material={materials.material_2}
                    />
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/models/grassModel.gltf')
