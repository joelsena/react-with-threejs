/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: arorahillsservices.sean (https://sketchfab.com/arorahillsservices.sean)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/master-cheif-24bae4cb5ccc4ee58d519da42e435770
title: Master Cheif
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { AnimationClip } from 'three'

type GLTFResult = GLTF & {
    nodes: {
        Object_6: THREE.SkinnedMesh
        Object_8: THREE.SkinnedMesh
        Object_9: THREE.SkinnedMesh
        _rootJoint: THREE.Bone
    }
    materials: {
        ['Helmet_78f817d5-faef-42d8-8f3b-0f1638ea63bdmat']: THREE.MeshStandardMaterial
        ['Body_2a46a897-a6bd-40f0-a95f-3a6ad1568f0cmat']: THREE.MeshStandardMaterial
        ['Visor_be822595-d4d2-4cac-a225-16b043c09f7dmat']: THREE.MeshStandardMaterial
    }
}

type ActionName = 'mixamo.com'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function MasterChiefModel({
    ...props
}: JSX.IntrinsicElements['group']) {
    const group = useRef<THREE.Group>()
    const { nodes, materials, animations } = useGLTF(
        '/models/masterChiefModel.gltf'
    ) as GLTFResult
    const { actions } = useAnimations<AnimationClip>(animations, group)

    return (
        <group
            ref={group}
            onClick={() => actions['mixamo.com'].play()}
            {...props}
            dispose={null}
        >
            <group name="Sketchfab_Scene">
                <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
                    <group
                        name="b59ebe71200e4a1a919513cc401e7aadfbx"
                        rotation={[Math.PI / 2, 0, 0]}
                    >
                        <group name="Object_2">
                            <group name="RootNode">
                                <group name="Object_4">
                                    <primitive
                                        castShadow
                                        object={nodes._rootJoint}
                                    />
                                    <skinnedMesh
                                        castShadow
                                        name="Object_6"
                                        geometry={nodes.Object_6.geometry}
                                        material={
                                            materials[
                                                'Helmet_78f817d5-faef-42d8-8f3b-0f1638ea63bdmat'
                                            ]
                                        }
                                        skeleton={nodes.Object_6.skeleton}
                                    />
                                    <skinnedMesh
                                        castShadow
                                        name="Object_8"
                                        geometry={nodes.Object_8.geometry}
                                        material={
                                            materials[
                                                'Body_2a46a897-a6bd-40f0-a95f-3a6ad1568f0cmat'
                                            ]
                                        }
                                        skeleton={nodes.Object_8.skeleton}
                                    />
                                    <skinnedMesh
                                        castShadow
                                        name="Object_9"
                                        geometry={nodes.Object_9.geometry}
                                        material={
                                            materials[
                                                'Visor_be822595-d4d2-4cac-a225-16b043c09f7dmat'
                                            ]
                                        }
                                        skeleton={nodes.Object_9.skeleton}
                                    />
                                </group>
                            </group>
                        </group>
                    </group>
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/models/masterChiefModel.gltf')
