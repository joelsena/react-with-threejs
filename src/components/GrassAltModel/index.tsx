/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: AgultoDesigns (https://sketchfab.com/AgultoDesigns)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/grass-free-to-use-6762d57132694011a56b502b23072940
title: Grass (free to use)
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
    nodes: {
        pPlane12_grass_0: THREE.Mesh
    }
    materials: {
        grass: THREE.MeshStandardMaterial
    }
}

export function GrassAltModel({ ...props }: JSX.IntrinsicElements['group']) {
    const group = useRef<THREE.Group>()
    const { nodes, materials } = useGLTF(
        '/models/grassAltModel.gltf'
    ) as GLTFResult
    return (
        <group
            ref={group}
            {...props}
            dispose={null}
            scale={[
                1 / Math.pow(16, 2),
                1 / Math.pow(16, 2),
                1 / Math.pow(16, 2)
            ]}
        >
            <group rotation={[-Math.PI / 2, 0, 0]}>
                <group rotation={[Math.PI / 2, 0, 0]}>
                    <mesh
                        geometry={nodes.pPlane12_grass_0.geometry}
                        material={materials.grass}
                    />
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/models/grassAltModel.gltf')
