/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: sharingan (https://sketchfab.com/luci-fan)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/lucifers-corvette-1960-chevrolet-corvette-c1-507ee2e6d6a34a3db7bf8373c70fecff
title: Lucifer's Corvette - 1960 Chevrolet Corvette C1
*/

import React, { useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { Mesh } from 'three'
import { useFrame } from '@react-three/fiber'

export default function AlternativeCorvetteModel({
    ...props
}: JSX.IntrinsicElements['group']) {
    const gltf = useGLTF('/models/corvetteC7Model.gltf')
    // const gltf = useGLTF('/models/corvetteModel.gltf')

    useEffect(() => {
        // gltf.scene.scale.set(0.022, 0.022, 0.022)
        gltf.scene.scale.set(0.005, 0.005, 0.005)
        gltf.scene.position.set(0, -0.035, 0)
        gltf.scene.traverse(obj => {
            if (obj instanceof Mesh) {
                obj.castShadow = true
                obj.receiveShadow = true
                obj.material.envMapIntensity = 20
            }
        })
    }, [gltf])

    useFrame(state => {
        let t = state.clock.getElapsedTime()

        let carGroup = gltf.scene.children[0].children[0].children[0]
        carGroup.children[0].rotation.x = t * 8
        carGroup.children[2].rotation.x = t * 8
        carGroup.children[4].rotation.x = t * 8
        carGroup.children[6].rotation.x = t * 8
    })

    // Quando você cria algo fora do react-three-fiber e ainda sim quer referência a cena
    // Voce precisa dispose ele futuramente
    return <primitive object={gltf.scene} />
}

useGLTF.preload('/models/corvetteC7Model.gltf')
// useGLTF.preload('/models/corvetteModel.gltf')
